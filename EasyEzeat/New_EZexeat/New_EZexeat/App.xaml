<Application x:Class="New_EZexeat.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:New_EZexeat"
             xmlns:local1="clr-namespace:Fasetto.Word"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:properties="clr-namespace:New_EZexeat.Properties"
             StartupUri="SplashScreen.xaml">
    
    <Application.Resources>
        <!-- Rounded Button Style -->
        <Style x:Key="RoundedButtonTemplate" TargetType="Button">
            <Setter Property="Background" Value="#7F7FD6"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="30" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                            </ContentPresenter>
                        </Border>

                        <!--Colour Transition-->
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="#BBBBFF" Duration="0:0:0.3" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="#7F7FD6" Duration="0:0:0.3" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Button States -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="#5050EA"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        
        

        <!-- Free Orange Button Template -->
        <Style x:Key="OrangeButtonTemplate" TargetType="Button">
            <Setter Property="Background" Value="#FFFFD411"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="10" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                            </ContentPresenter>
                        </Border>

                        <!--Colour Transition-->
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="#FFFFE87D" Duration="0:0:0.2" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="#FFFFD411" Duration="0:0:0.2" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Button States -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="#FFFFE540"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="OrangeButtonTemplate2" TargetType="Button">
            <Setter Property="Background" Value="#FFFFD411"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="30" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                            </ContentPresenter>
                        </Border>

                        <!--Colour Transition-->
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="#FFFFE87D" Duration="0:0:0.2" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="#FFFFD411" Duration="0:0:0.2" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Button States -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="#FFFFE540"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="OutlinedOrangeButtonTemplate" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#FFFFD411"/>
            <Setter Property="BorderBrush" Value="#FFFFD411"/>
            <Setter Property="BorderThickness" Value="2.5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="10" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                            </ContentPresenter>
                        </Border>

                        <!--Colour Transition-->
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="#FFFFE87D" Duration="0:0:0.2" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="Transparent" Duration="0:0:0.3" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Button States -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="BorderBrush" Value="#FFFFD411"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="#FFFFE87D"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Free Text Button Template -->
        <Style x:Key="TextButtonTemplate" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#f2f2f2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="30" 
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                                
                                
                                
                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Button States -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="Aquamarine"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SelectButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#808080"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="30" 
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">



                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Button States -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="#7DCDF4"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="EdittButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#4AA4F4"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="30" 
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">



                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Button States -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="#7DCDF4"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="whiteMan" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="white"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="30" 
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">



                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Button States -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Plus and Minus Admin Buttons -->
        <Style x:Key="PlusButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#666666"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="30" 
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">



                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Button States -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="#7DCDF4"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MinusButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#666666"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="30" 
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">



                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Button States -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="Red"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="AtBhyte" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#4287f5"/>
            <Setter Property="BorderBrush" Value="#4287f5"/>
            <Setter Property="BorderThickness" Value="0 0 0 2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">


                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Button States -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="#7dafff"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Select a school button-->
        <Style x:Key="SelectaSchool" TargetType="ToggleButton">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="0 0 0 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Margin="0 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Border Background="White" Height="30" Width="180" CornerRadius="5" Margin="0">
                                <Grid>
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center">

                                    </ContentPresenter>
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>



            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Foreground" Value="#6690d3"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Cursor" Value="Arrow"/>
                    <Setter Property="Foreground" Value="#6690d3"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--User Icon Button Styles-->
        <Style x:Key="HomeKey" TargetType="ToggleButton">
            <Setter Property="Foreground" Value="#B2B2B2"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="0 0 0 0"/>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid Margin="0 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Image  Margin="0 10 0 30">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=homeBtn, Path=IsChecked}" Value="True">
                                                <Setter Property="Source" Value="/Images/Others/Button Icons/home_blu.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=homeBtn, Path=IsChecked}" Value="False">
                                                <Setter Property="Source" Value="/Images/Others/Button Icons/home1.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Text="Home" TextAlignment="Center" FontSize="20" Margin="0 58 0 0" FontWeight="SemiBold"/>
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>



            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="#BCD0E8"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="#BCD0E8"/>
                    <Setter Property="Foreground" Value="#5050EA"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Cursor" Value="Arrow"/>
                    <Setter Property="Background" Value="#BCD0E8"/>
                    <Setter Property="Foreground" Value="#7878FF"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ExeatKey" TargetType="ToggleButton">
            <Setter Property="Foreground" Value="#B2B2B2"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="0 0 0 0"/>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid Margin="0 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Image Margin="0 10 0 30">

                                <!--Image Change Colour Trigger-->
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=takeExeatBtn, Path=IsChecked}" Value="True">
                                                <Setter Property="Source" Value="/Images/Others/Button Icons/ex_blu.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=takeExeatBtn, Path=IsChecked}" Value="False">
                                                <Setter Property="Source" Value="/Images/Others/Button Icons/ex_gray.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>

                            </Image>
                            <TextBlock Text="Take An Exeat" TextAlignment="Center" FontSize="20" Margin="0 58 0 0" FontWeight="SemiBold"/>
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>

                    <!--Button Colour Animation-->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="#BCD0E8"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="#BCD0E8"/>
                    <Setter Property="Foreground" Value="#5050EA"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Cursor" Value="Arrow"/>
                    <Setter Property="Background" Value="#BCD0E8"/>
                    <Setter Property="Foreground" Value="#7878FF"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MessagesKey" TargetType="ToggleButton">
            <Setter Property="Foreground" Value="#B2B2B2"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="0 0 0 0"/>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid Margin="0 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Image Margin="0 10 0 30">
                                
                                <!--Image Change Colour Trigger-->
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=messagesBtn, Path=IsChecked}" Value="True">
                                                <Setter Property="Source" Value="/Images/Others/Button Icons/msgs_blu.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=messagesBtn, Path=IsChecked}" Value="False">
                                                <Setter Property="Source" Value="/Images/Others/Button Icons/msgs_gray.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                                
                            </Image>
                            <TextBlock Text="Messages" TextAlignment="Center" FontSize="20" Margin="0 58 0 0" FontWeight="SemiBold"/>
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>



            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="#BCD0E8"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="#BCD0E8"/>
                    <Setter Property="Foreground" Value="#5050EA"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Cursor" Value="Arrow"/>
                    <Setter Property="Background" Value="#BCD0E8"/>
                    <Setter Property="Foreground" Value="#7878FF"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!--Admin Icon Button Styles-->
        <Style x:Key="HomeKeyAdmin" TargetType="ToggleButton">
            <Setter Property="Foreground" Value="#B2B2B2"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="0 0 0 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border CornerRadius="0" Background="{TemplateBinding Background}">
                            <ContentPresenter>

                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid Margin="0 0 0 0" Background="Transparent">
                            <Image Margin="0 10 0 30">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=school, Path=IsChecked}" Value="True">
                                                <Setter Property="Source" Value="/ToggleButtons/home1.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=school, Path=IsChecked}" Value="False">
                                                <Setter Property="Source" Value="/ToggleButtons/home2.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Text="School" TextAlignment="Center" FontSize="16" Margin="0 58 0 0" FontWeight="SemiBold"/>
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>





            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Foreground" Value="Orange"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Cursor" Value="Arrow"/>
                    <Setter Property="Foreground" Value="Orange"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="StudentKeyAdmin" TargetType="ToggleButton">
            <Setter Property="Foreground" Value="#B2B2B2"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="0 0 0 0"/>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid Margin="0 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Image  Margin="0 10 0 30">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=students, Path=IsChecked}" Value="True">
                                                <Setter Property="Source" Value="/ToggleButtons/student1.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=students, Path=IsChecked}" Value="False">
                                                <Setter Property="Source" Value="/ToggleButtons/student2.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Text="Students" TextAlignment="Center" FontSize="16" Margin="0 58 0 0" FontWeight="SemiBold"/>
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border CornerRadius="0" Background="{TemplateBinding Background}">
                            <ContentPresenter>

                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>



            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Foreground" Value="Orange"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Cursor" Value="Arrow"/>
                    <Setter Property="Foreground" Value="Orange"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="HousemastersKeyAdmin" TargetType="ToggleButton">
            <Setter Property="Foreground" Value="#B2B2B2"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="0 0 0 0"/>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid Margin="0 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Image  Margin="0 10 0 30">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=hsemasters, Path=IsChecked}" Value="True">
                                                <Setter Property="Source" Value="/ToggleButtons/teacher1.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=hsemasters, Path=IsChecked}" Value="False">
                                                <Setter Property="Source" Value="/ToggleButtons/teacher2.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Text="Housemasters" TextAlignment="Center" FontSize="16" Margin="0 58 0 0" FontWeight="SemiBold" />
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border CornerRadius="0" Background="{TemplateBinding Background}">
                            <ContentPresenter>

                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>





            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Foreground" Value="Orange"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Cursor" Value="Arrow"/>
                    <Setter Property="Foreground" Value="Orange"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="AboutKeyAdmin" TargetType="ToggleButton">
            <Setter Property="Foreground" Value="#B2B2B2"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="0 0 0 0"/>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid Margin="0 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Image  Margin="0 10 0 30">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=about, Path=IsChecked}" Value="True">
                                                <Setter Property="Source" Value="ToggleButtons/qstn1.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=about, Path=IsChecked}" Value="False">
                                                <Setter Property="Source" Value="ToggleButtons/qstn2.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Text="About" TextAlignment="Center" FontSize="16" Margin="0 58 0 0" FontWeight="SemiBold"/>
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border CornerRadius="0" Background="{TemplateBinding Background}">
                            <ContentPresenter>

                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>





            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Foreground" Value="Orange"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Cursor" Value="Arrow"/>
                    <Setter Property="Foreground" Value="Orange"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="HelpKeyAdmin" TargetType="ToggleButton">
            <Setter Property="Foreground" Value="#B2B2B2"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="0 0 0 0"/>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid Margin="0 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Image  Margin="0 10 0 30">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=help, Path=IsChecked}" Value="True">
                                                <Setter Property="Source" Value="ToggleButtons/ask1.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=help, Path=IsChecked}" Value="False">
                                                <Setter Property="Source" Value="ToggleButtons/ask2.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Text="Help" TextAlignment="Center" FontSize="16" Margin="0 58 0 0" FontWeight="SemiBold" />
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border CornerRadius="0" Background="{TemplateBinding Background}">
                            <ContentPresenter>

                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>





            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Foreground" Value="Orange"/>

                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Cursor" Value="Arrow"/>
                    <Setter Property="Foreground" Value="Orange"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <!-- User Profile-Pic ImageButton -->
        <Style x:Key="UPPImg" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#f2f2f2"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
            <Setter Property="Content" Value=""/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="100" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">



                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Button States -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="Black"/>
                    <Setter Property="Opacity" Value="0.3"/>
                    <Setter Property="Foreground" Value="#f2f2f2"/>
                    <Setter Property="Content" Value="CHANGE &#xD;&#xA;PROFILE PICTURE"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Back button -->
        <Style x:Key="AnotherButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#7F7FD6"/>
            <Setter Property="BorderBrush" Value="#7F7FD6"/>
            <Setter Property="BorderThickness" Value="1.5"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="30" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <TextBlock Text="BACK"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"/>
                        </Border>

                        <!--Colour Transition-->
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="#7F7FD6" Duration="0:0:0.3" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="Transparent" Duration="0:0:0.3" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Button States -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Foreground" Value="#F2F2F2"/>
                    <Setter Property="BorderThickness" Value="1.5"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="#5050EA"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Red Back button -->
        <Style x:Key="AntiButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#ff3939"/>
            <Setter Property="BorderBrush" Value="#ff3939"/>
            <Setter Property="BorderThickness" Value="1.5"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="30" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <TextBlock Text="BACK"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Button States -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="BorderBrush" Value="#ff3939"/>
                    <Setter Property="Background" Value="#ffa9a9"/>
                    <Setter Property="Foreground" Value="#F2F2F2"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="#ff2222"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Back Admin Button-->
        <Style x:Key="AntiButton2" TargetType="Button">
            <Setter Property="Background" Value="#ff3939"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1.5"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="0 20 20 0" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter>

                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Button States -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Background" Value="#f28383"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="#f28383"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- No Account, SignUp Button -->
        <Style x:Key="rekButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="30" 
                                Background="{TemplateBinding Background}">
                            <TextBlock Text="No account? Sign Up Here"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="Aquamarine" Storyboard.TargetProperty="Foreground.Color" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="Gray" Storyboard.TargetProperty="Foreground.Color" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Button States -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Input Texts -->
        <Style x:Key="coolioTextBox" TargetType="TextBox">
            <Setter Property="BorderBrush" Value="#b3b3b3"/>
            <Setter Property="BorderThickness" Value="0 0 0 2"/>
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="0 5 0 5"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>

        <!-- PlaceHolder Input Texts -->
        <Style x:Key="TextBoxPlaceholder" TargetType="{x:Type TextBox}">
            <Setter Property="BorderBrush" Value="#b3b3b3"/>
            <Setter Property="BorderThickness" Value="0 0 0 2"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="0 5 0 5"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Padding" Value="0 35 0 0"/>
            <Setter Property="Background" Value="Transparent"/>


            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">

                        <Grid>
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <TextBlock x:Name="placeholder" 
                                       IsHitTestVisible="False"
                                       Text="{TemplateBinding Tag}"
                                       Padding="{TemplateBinding Padding}"
                                       VerticalAlignment="Center"
                                       TextAlignment="Center"
                                       Foreground="#b3b3b3"
                                       FontSize="13"
                                       FontWeight="Light">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="#7eb4ea"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="#569de5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Orange Border -->
        <Style x:Key="BorderStyle1" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="Orange"/>
            <Setter Property="CornerRadius" Value="5 5 0 0"/>
        </Style>
        <Color x:Key="Color1">#FFF7B131</Color>

        <!-- Orange Back button -->
        <Style x:Key="BackOrange" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#FFF3A412"/>
            <Setter Property="BorderBrush" Value="#FFF3A412"/>
            <Setter Property="BorderThickness" Value="1.5"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="30" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <TextBlock Text="BACK"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!-- Button States -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="#FFF3D7A3"/>
                    <Setter Property="Foreground" Value="#F2F2F2"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="{x:Null}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Input Passwords -->
        <Style x:Key="coolioTextBox1" TargetType="PasswordBox">
            <Setter Property="BorderBrush" Value="#b3b3b3"/>
            <Setter Property="BorderThickness" Value="0 0 0 2"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Margin" Value="0 5 0 5"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>

        <!--School Motto TextBox-->
        <Style x:Key="coolioTextBox2nd" TargetType="TextBox">
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0 0 0 0"/>
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="0 5 0 5"/>
            <Setter Property="Background" Value="Transparent"/>


            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Foreground" Value="#7DCDF4"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Exeat Textboxes-->
        <Style x:Key="TakeExeatSubjectBox" TargetType="TextBox">
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#CCCCCC"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="CharacterCasing" Value="Upper" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Grid>
                            <Border Background="{TemplateBinding Background}" x:Name="Db" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="20 20 0 0">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                            </Border>

                            <TextBlock x:Name="placeholder" 
                                       IsHitTestVisible="False"
                                       Text="Subject: "
                                       Padding="10 1 0 0"
                                       Foreground="#cccccc"
                                       FontSize="20"
                                       FontWeight="SemiBold">
                                <!--
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                                -->
                            </TextBlock>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Db"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="Width" Value="Auto">
                                <Setter Property="MinWidth" Value="100"/>
                            </Trigger>
                            <Trigger Property="Height" Value="Auto">
                                <Setter Property="MinHeight" Value="20"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TakeExeatTextBox2" TargetType="TextBox">
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Grid>
                            <Border Background="{TemplateBinding Background}" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0 0 20 20">
                                <ScrollViewer x:Name="PART_ContentHost"/>
                            </Border>

                            <TextBlock x:Name="placeholder" 
                                       IsHitTestVisible="False"
                                       Text="{TemplateBinding Tag}"
                                       Padding="{TemplateBinding Padding}"
                                       Foreground="#b3b3b3"
                                       FontSize="13"
                                       FontWeight="Light">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                        <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="Width" Value="Auto">
                                    <Setter Property="MinWidth" Value="100"/>
                                </Trigger>
                                <Trigger Property="Height" Value="Auto">
                                    <Setter Property="MinHeight" Value="20"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Rounded TextBox -->
        <Style x:Key="RoundedTB" TargetType="TextBox">
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1.5"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="Padding" Value="10 2 0 2"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border Background="{TemplateBinding Background}" x:Name="Db" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="15">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Db"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" Value="#3AAEEF"/>
                            </Trigger>
                            <Trigger Property="Width" Value="Auto">
                                <Setter Property="MinWidth" Value="100"/>
                            </Trigger>
                            <Trigger Property="Height" Value="Auto">
                                <Setter Property="MinHeight" Value="20"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Placeholder Password-->
        <Style x:Key="PasswordBoxPlaceholder" TargetType="{x:Type PasswordBox}">
            <Setter Property="BorderBrush" Value="#b3b3b3"/>
            <Setter Property="BorderThickness" Value="0 0 0 2"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Margin" Value="0 5 0 5"/>
            <Setter Property="Padding" Value="0 35 0 0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="local:MonitorPasswordProperty.Value" Value="True"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">

                        <Grid>
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <TextBlock x:Name="PBplaceholder" 
                                       IsHitTestVisible="False"
                                       Text="{TemplateBinding Tag}"
                                       Padding="{TemplateBinding Padding}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       TextAlignment="Center"
                                       Foreground="#b3b3b3"
                                       FontSize="13"
                                       Visibility="{TemplateBinding local:HasTextProperty.Value, Converter={local1:BooleanToVisiblityConverter}}"
                                       FontWeight="Light">

                            </TextBlock>

                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="#7eb4ea"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="#569de5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Admin Back button -->
        <Style x:Key="BackAdmin" TargetType="Button">
            <Setter Property="Background" Value="#FFEE0000"/>
            <Setter Property="Foreground" Value="#F2F2F2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="20" 
                                Background="{TemplateBinding Background}">
                            <TextBlock Text="BACK"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Button States -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="#FFF9A1A1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="#FFFF2D2D"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Sign in button for admin page -->
        <Style x:Key="admin" TargetType="Button">
            <Setter Property="Background" Value="Orange"/>
            <Setter Property="Foreground" Value="#F2F2F2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="30" 
                                Background="{TemplateBinding Background}">
                            <TextBlock Text="SIGN IN"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Button States -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="#FFF0AF38"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Background" Value="Orange"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--For Border Button-->
        <Style x:Key="Bord" TargetType="Button">
            <Setter Property="Background" Value="#7F7FD6"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border FocusVisualStyle="{x:Null}" CornerRadius="30" Background="{TemplateBinding Background}">
                            <ContentPresenter FocusVisualStyle="{x:Null}" HorizontalAlignment="Center" VerticalAlignment="Center">

                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Button States -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Opacity" Value="0.5"/>
                    <Setter Property="Background" Value="Black"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!--ComboBox Custom-->
        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="0" SnapsToDevicePixels="True" Fill="Gray" Opacity="0.1"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border FocusVisualStyle="{x:Null}">
                            <ContentPresenter FocusVisualStyle="{x:Null}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ComboBoxItem.IsMouseOver" Value="true">
                                <Setter Property="Background" Value="Red"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CB" TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="BorderBrush" Value="#b3b3b3" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0 0 0 2"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="Regular" />
            <Setter Property="MinWidth" Value="50"/>
            <Setter Property="MinHeight" Value="32"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>

                            <!--ToggleButton-->
                            <ToggleButton Name="ToggleButton" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" BorderThickness="{TemplateBinding BorderThickness}"
                                          FocusVisualStyle="{x:Null}"
                                          Grid.Column="2"
                                          Focusable="false"
                                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press">

                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Border Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}" 
                                                            BorderThickness="{TemplateBinding BorderThickness}" 
                                                            Padding="{TemplateBinding Padding}">
                                                        <ContentPresenter />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>

                            <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="{x:Null}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent">
                                <Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="200 0 0 0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                                    <Path x:Name="arrow" VerticalAlignment="Center" Margin="0 0 0 0" HorizontalAlignment="Right" Fill="#333333" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"/>
                                </Border>
                            </Border>

                            <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="0 0 0 5"
                                FocusVisualStyle="{x:Null}"/>
                            <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="3,3,23,3"
                                Focusable="True"                               
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide"
                                FocusVisualStyle="{x:Null}">
                                <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"               
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                      FocusVisualStyle="{x:Null}">
                                    <Border x:Name="DropDownBorder"
                                            Background="White"
                                            BorderThickness="1.5"
                                            BorderBrush="{x:Null}"
                                            FocusVisualStyle="{x:Null}">
                                        <Border.Effect>
                                            <DropShadowEffect Opacity="0.6" ShadowDepth="3" BlurRadius="2"/>
                                        </Border.Effect>
                                    </Border>

                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True" FocusVisualStyle="{x:Null}">
                                        <StackPanel FocusVisualStyle="{x:Null}" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0 0 10 10"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,-5,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility"  Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter TargetName="arrow" Property="Fill" Value="#669AC9" />
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="#669AC9"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--Rounded ComboBox-->
        <Style x:Key="RoundedCB" TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderThickness" Value="1.5"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="FontWeight" Value="Regular"/>
            <Setter Property="MinWidth" Value="50"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>

                            <!--ToggleButton-->
                            <ToggleButton Name="ToggleButton" 
                                          BorderBrush="{TemplateBinding BorderBrush}" 
                                          Background="{TemplateBinding Background}" 
                                          Foreground="{TemplateBinding Foreground}" 
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          FocusVisualStyle="{x:Null}"
                                          Grid.Column="2"
                                          Focusable="false"
                                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"
                                          TextBlock.TextAlignment="Center">

                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Border Background="{TemplateBinding Background}" 
                                                            BorderThickness="{TemplateBinding BorderThickness}" 
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            Padding="{TemplateBinding Padding}"
                                                            CornerRadius="15">
                                                        <ContentPresenter />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="BorderBrush" Value="#669AC9"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>

                            <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="{x:Null}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent">
                                <Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="290 0 0 0" HorizontalAlignment="Center" BorderThickness="1" BorderBrush="Transparent">
                                    <Path x:Name="arrow" VerticalAlignment="Center" Margin="0 0 0 0" HorizontalAlignment="Right" Fill="#333333" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"/>
                                </Border>
                            </Border>

                            <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="15 0 0 5"
                                
                                FocusVisualStyle="{x:Null}"/>
                            <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="30,3,23,3"
                                Focusable="True"                               
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide"
                                FocusVisualStyle="{x:Null}">
                                <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"               
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                      FocusVisualStyle="{x:Null}"
                                      Margin="0 0 0 0">
                                    <Border x:Name="DropDownBorder"
                                            Background="White"
                                            BorderThickness="1.5"
                                            BorderBrush="{x:Null}"
                                            FocusVisualStyle="{x:Null}">
                                        <Border.Effect>
                                            <DropShadowEffect Opacity="0.6" ShadowDepth="3" BlurRadius="10"/>
                                        </Border.Effect>
                                    </Border>

                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True" FocusVisualStyle="{x:Null}">
                                        <StackPanel FocusVisualStyle="{x:Null}" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="5"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,0,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility"  Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter TargetName="arrow" Property="Fill" Value="#3AAEEF"/>
                                <Setter Property="BorderBrush" Value="#3AAEEF"/>
                            </Trigger>
                            <Trigger Property="Width" Value="Auto">
                                <Setter Property="MinWidth" Value="100"/>
                            </Trigger>
                            <Trigger Property="Height" Value="Auto">
                                <Setter Property="MinHeight" Value="20"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Print and Send Button -->
        <Style x:Key="PrintBtn" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#AAAAAA"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="45"/>
            <Setter Property="TextBlock.FontSize" Value="45"/>
            <Setter Property="BorderThickness" Value="0 3 0 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="0 0 0 15" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                            </ContentPresenter>
                        </Border>

                        <!--Colour Transition-->
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="#9EE8B3" Duration="0:0:0.2" Storyboard.TargetProperty="Foreground.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="#AAAAAA" Duration="0:0:0.2" Storyboard.TargetProperty="Foreground.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Button States -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Foreground" Value="#70E58F"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SendBtn" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#76A9E2"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="45"/>
            <Setter Property="TextBlock.FontSize" Value="45"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="0 0 15 0" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                            </ContentPresenter>
                        </Border>

                        <!--Colour Transition-->
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="#4646F9" Duration="0:0:0.2" Storyboard.TargetProperty="Foreground.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="#76A9E2" Duration="0:0:0.2" Storyboard.TargetProperty="Foreground.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Button States -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Foreground" Value="#6868FC"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <properties:Settings x:Key="Settings"/>

        <ResourceDictionary x:Key="jk">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Purple.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

    </Application.Resources>
</Application>
