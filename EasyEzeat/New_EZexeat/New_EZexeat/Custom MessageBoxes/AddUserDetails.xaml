<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:New_EZexeat.Custom_MessageBoxes"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="New_EZexeat.Custom_MessageBoxes.AddUserDetails"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen" WindowStyle="None" AllowsTransparency="True" Background="Transparent"
        Title="AddUserDetails" Height="560" Width="960">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Orange.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DatePicker.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
                <Setter Property="materialDesign:HintAssist.IsFloating" Value="True"/>
                <Style.BasedOn>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}"/>
                        <Setter Property="Foreground" Value="{Binding (TextElement.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type FrameworkElement}}}"/>
                        <Setter Property="BorderThickness" Value="0,0,0,1"/>
                        <Setter Property="ItemContainerStyle">
                            <Setter.Value>
                                <Style TargetType="{x:Type ComboBoxItem}">
                                    <Setter Property="Tag" Value="1.0"/>
                                    <Style.BasedOn>
                                        <Style TargetType="{x:Type ComboBoxItem}">
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="Padding" Value="16,8"/>
                                            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                                            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="FocusVisualStyle">
                                                <Setter.Value>
                                                    <Style>
                                                        <Setter Property="Control.Template">
                                                            <Setter.Value>
                                                                <ControlTemplate>
                                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                                        <Grid x:Name="GridWrapper">
                                                            <VisualStateManager.VisualStateGroups>
                                                                <VisualStateGroup x:Name="CommonStates">
                                                                    <VisualStateGroup.Transitions>
                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" Storyboard="{x:Null}" To="Normal">
                                                                            <VisualTransition.GeneratedEasingFunction>
                                                                                <CircleEase EasingMode="EaseOut"/>
                                                                            </VisualTransition.GeneratedEasingFunction>
                                                                        </VisualTransition>
                                                                    </VisualStateGroup.Transitions>
                                                                    <VisualState x:Name="Normal"/>
                                                                    <VisualState x:Name="MouseOver">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="SelectionStates">
                                                                    <VisualStateGroup.Transitions>
                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                    </VisualStateGroup.Transitions>
                                                                    <VisualState x:Name="Selected">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0" To="0.18" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unselected"/>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="FocusStates">
                                                                    <VisualStateGroup.Transitions>
                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="Unfocused"/>
                                                                    </VisualStateGroup.Transitions>
                                                                    <VisualState x:Name="Focused">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unfocused"/>
                                                                </VisualStateGroup>
                                                            </VisualStateManager.VisualStateGroups>
                                                            <Border x:Name="BackBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
                                                            <Border x:Name="MouseOverBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" SnapsToDevicePixels="True">
                                                                <Border.Background>
                                                                    <TemplateBinding Property="Foreground">
                                                                        <TemplateBinding.Converter>
                                                                            <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                                        </TemplateBinding.Converter>
                                                                    </TemplateBinding>
                                                                </Border.Background>
                                                            </Border>
                                                            <Border x:Name="SelectedBorder" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                                                <Border.Background>
                                                                    <TemplateBinding Property="Foreground">
                                                                        <TemplateBinding.Converter>
                                                                            <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                                        </TemplateBinding.Converter>
                                                                    </TemplateBinding>
                                                                </Border.Background>
                                                            </Border>
                                                            <materialDesign:Ripple ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Focusable="False" HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                <materialDesign:Ripple.Feedback>
                                                                    <TemplateBinding Property="Foreground">
                                                                        <TemplateBinding.Converter>
                                                                            <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                                        </TemplateBinding.Converter>
                                                                    </TemplateBinding>
                                                                </materialDesign:Ripple.Feedback>
                                                            </materialDesign:Ripple>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="GridWrapper" Value="0.56"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="Tag" Value="1.0"/>
                                                                    <Condition Property="IsSelected" Value="True"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Height" Value="0"/>
                                                            </MultiTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Style.BasedOn>
                                </Style>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="Padding" Value="0,6"/>
                        <Setter Property="VerticalContentAlignment" Value="Top"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                        <Setter Property="Validation.ErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate/>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="materialDesign:TextFieldAssist.TextBoxViewMargin" Value="1,0"/>
                        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                        <Setter Property="materialDesign:HintAssist.Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate/>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{Binding (materialDesign:TextFieldAssist.UnderlineBrush), RelativeSource={RelativeSource Self}}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter Property="BorderBrush" Value="{Binding (materialDesign:TextFieldAssist.UnderlineBrush), RelativeSource={RelativeSource Self}}"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="True">
                                <Setter Property="IsTabStop" Value="False"/>
                                <Setter Property="materialDesign:ComboBoxAssist.ShowSelectedItem" Value="True"/>
                            </Trigger>
                            <Trigger Property="materialDesign:ComboBoxAssist.ShowSelectedItem" Value="True">
                                <Setter Property="ItemContainerStyle">
                                    <Setter.Value>
                                        <Style TargetType="{x:Type ComboBoxItem}">
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="Padding" Value="16,8"/>
                                            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                                            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="FocusVisualStyle">
                                                <Setter.Value>
                                                    <Style>
                                                        <Setter Property="Control.Template">
                                                            <Setter.Value>
                                                                <ControlTemplate>
                                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                                        <Grid x:Name="GridWrapper">
                                                            <VisualStateManager.VisualStateGroups>
                                                                <VisualStateGroup x:Name="CommonStates">
                                                                    <VisualStateGroup.Transitions>
                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" Storyboard="{x:Null}" To="Normal">
                                                                            <VisualTransition.GeneratedEasingFunction>
                                                                                <CircleEase EasingMode="EaseOut"/>
                                                                            </VisualTransition.GeneratedEasingFunction>
                                                                        </VisualTransition>
                                                                    </VisualStateGroup.Transitions>
                                                                    <VisualState x:Name="Normal"/>
                                                                    <VisualState x:Name="MouseOver">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="SelectionStates">
                                                                    <VisualStateGroup.Transitions>
                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                    </VisualStateGroup.Transitions>
                                                                    <VisualState x:Name="Selected">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0" To="0.18" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unselected"/>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="FocusStates">
                                                                    <VisualStateGroup.Transitions>
                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="Unfocused"/>
                                                                    </VisualStateGroup.Transitions>
                                                                    <VisualState x:Name="Focused">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unfocused"/>
                                                                </VisualStateGroup>
                                                            </VisualStateManager.VisualStateGroups>
                                                            <Border x:Name="BackBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
                                                            <Border x:Name="MouseOverBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" SnapsToDevicePixels="True">
                                                                <Border.Background>
                                                                    <TemplateBinding Property="Foreground">
                                                                        <TemplateBinding.Converter>
                                                                            <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                                        </TemplateBinding.Converter>
                                                                    </TemplateBinding>
                                                                </Border.Background>
                                                            </Border>
                                                            <Border x:Name="SelectedBorder" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                                                <Border.Background>
                                                                    <TemplateBinding Property="Foreground">
                                                                        <TemplateBinding.Converter>
                                                                            <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                                        </TemplateBinding.Converter>
                                                                    </TemplateBinding>
                                                                </Border.Background>
                                                            </Border>
                                                            <materialDesign:Ripple ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Focusable="False" HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                <materialDesign:Ripple.Feedback>
                                                                    <TemplateBinding Property="Foreground">
                                                                        <TemplateBinding.Converter>
                                                                            <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                                        </TemplateBinding.Converter>
                                                                    </TemplateBinding>
                                                                </materialDesign:Ripple.Feedback>
                                                            </materialDesign:Ripple>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="GridWrapper" Value="0.56"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="Tag" Value="1.0"/>
                                                                    <Condition Property="IsSelected" Value="True"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Height" Value="0"/>
                                                            </MultiTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Style.BasedOn>
            </Style>

        </ResourceDictionary>
    </Window.Resources>

    <!--Expand/Fade In-->
    <materialDesign:TransitioningContent OpeningEffect="{materialDesign:TransitionEffect Duration=0:0:0.1, Kind=ExpandIn}">
        <materialDesign:TransitioningContent OpeningEffect="{materialDesign:TransitionEffect Duration=0:0:0.4, Kind=FadeIn}">
            <Grid FocusVisualStyle="{x:Null}" Background="Transparent">
                <Border Background="Transparent" CornerRadius="20" BorderBrush="Transparent" BorderThickness="0" Height="450" Width="800">
                    <Border.Effect>
                        <DropShadowEffect Direction="-436" ShadowDepth="4" Opacity="0.5" BlurRadius="15" Color="Black"/>
                    </Border.Effect>

                    <Border Background="White" CornerRadius="20" BorderBrush="Transparent" x:Name="detailsBorder">
                        <Grid>

                            <!--Add the necessary info-->
                            <TextBlock x:Name="pls" 
                                       Text="Please add the necessary info" 
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontSize="20" 
                                       FontWeight="DemiBold" 
                                       Margin="0 0 0 420" 
                                       Foreground="#FFFFD411"/>

                            <Border Width="750" BorderBrush="Gainsboro" BorderThickness="0 0 0 2" Height="20" Margin="0 270 0 0"/>
                            <Border Width="750" BorderBrush="Gainsboro" BorderThickness="0 0 0 2" Height="20" Margin="0 0 0 400"/>

                            <!--Left Side-->
                            <StackPanel HorizontalAlignment="Left" Margin="40 35 0 0" Width="250" TextBlock.FontSize="15">
                                <ComboBox materialDesign:HintAssist.Hint="Gender">
                                    <ComboBoxItem FocusVisualStyle="{x:Null}" Content="Male"/>
                                    <ComboBoxItem FocusVisualStyle="{x:Null}" Content="Female"/>
                                </ComboBox>
                                <DatePicker Style="{StaticResource MaterialDesignFloatingHintDatePicker}" FocusVisualStyle="{x:Null}" materialDesign:HintAssist.Hint="Date of Birth" Margin="0 50 0 0"/>
                                <TextBox Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.Hint="Religion" Margin="0 50 0 0"/>
                                <ComboBox Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:HintAssist.Hint="Blood Type" Margin="0 50 0 0">
                                    <ComboBoxItem FocusVisualStyle="{x:Null}" Content="A"/>
                                    <ComboBoxItem FocusVisualStyle="{x:Null}" Content="B"/>
                                    <ComboBoxItem FocusVisualStyle="{x:Null}" Content="O"/>
                                    <ComboBoxItem FocusVisualStyle="{x:Null}" Content="AB"/>
                                </ComboBox>
                            </StackPanel>

                            <!--Right Side-->
                            <StackPanel HorizontalAlignment="Right" Margin="0 35 40 0" Width="250" TextBlock.FontSize="15">
                                <TextBox Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.Hint="Medical Status" Margin="0 0 0 0"/>
                                <TextBox Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.Hint="Allergies" Margin="0 50 0 0"/>
                                <TextBox Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.Hint="Other Things" Margin="0 50 0 0"/>
                            </StackPanel>

                            <!--Buttons-->
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0 0 0 15" TextBlock.FontWeight="DemiBold" TextBlock.FontSize="14">
                                <Button Content="CANCEL" Style="{StaticResource OutlinedOrangeButtonTemplate}" Padding="10" Height="50" Width="100" Margin="0 0 50 0" FocusVisualStyle="{x:Null}" x:Name="cancelBtn" IsCancel="True"/>
                                <Button Content="SAVE" Style="{StaticResource OrangeButtonTemplate}" Padding="10" Height="50" Width="100" Margin="0 0 0 0" FocusVisualStyle="{x:Null}" x:Name="saveBtn" Click="SaveBtn_Click"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                </Border>
            </Grid>
        </materialDesign:TransitioningContent>
    </materialDesign:TransitioningContent>
</Window>
